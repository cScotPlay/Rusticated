plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://bai.jfrog.io/artifactory/maven" }
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url "https://maven.shedaniel.me" }
	maven { url 'https://maven.blamejared.com' }
	maven {
		url "https://maven.parchmentmc.net/"
		content {
			includeGroup "org.parchmentmc.data"
		}
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
}
loom {
	accessWidenerPath = file("src/main/resources/rusticated.accesswidener")

	runs {
		datagen {
			server()

			name = "Data Generation"
			runDir = "build/datagen"

			vmArg("-Dfabric-api.datagen")
			vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
		}
	}
}
assemble.dependsOn(runDatagen)

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.18.2:2022.07.03@zip")
	}

	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"

	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"
	modRuntimeOnly "mcp.mobius.waila:wthit:fabric-${project.wthit_version}"

	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

	//modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	//modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// compile against the JEI API but do not include it at runtime
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
	// at runtime, use the full JEI jar for Fabric
	modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
}
sourceSets.main.resources {
	srcDirs += 'src/main/generated'
}
//sourceSets {
////	// Add a data gen sourceset
////	datagen {
////		compileClasspath += main.compileClasspath
////		runtimeClasspath += main.runtimeClasspath
////		compileClasspath += main.output
////		runtimeClasspath += main.output
////	}
//	elixiremporium {
//		resources {
//			srcDirs += [
//					'src/testmod/generated'
//			]
//		}
//	}
//}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}


//runDatagen {
//	// Doesn't re-run the task when its up-to date
//	outputs.dir('src/main/generated')
//}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
